type: object
properties:
  id:
    type: string
    description: Unique identifier
  currency:
    type: string
    description: 'Currency of this order. For example, "USD"'
  customers:
    type: array
    description: List of customers associated with this order.
    items:
      $ref: ./Customer.yaml
  employee:
    description: The employee who took this order
    $ref: ./Reference.yaml
  total:
    type: integer
    description: Total price of the order in cents
  externalReferenceId:
    type: string
    description: External reference id if present in the order
  unpaidBalance:
    type: integer
    description: >-
      The net of orders with payment minus the amount collected. Includes
      refunds, manual refunds, tax, tip, service charge, non-revenue items, paid
      gift card activations and loads and discounts
  paymentState:
    type: string
    description: Is this order paid or not?
    enum:
      - OPEN
      - PAID
      - REFUNDED
      - CREDITED
      - PARTIALLY_PAID
      - PARTIALLY_REFUNDED
  title:
    type: string
  note:
    type: string
    description: >-
      An arbitrary string with information about this order, may be printed on
      the order receipt and displayed in apps
  orderType:
    $ref: ./OrderType.yaml
  taxRemoved:
    type: boolean
    description: If true then this order should not have taxes applied to it
    default: 'false'
  isVat:
    type: boolean
    description: This order was created by merchant with VAT enabled.
  state:
    type: string
    description: >-
      A String generally describing the state of the Order. When creating an
      Order, the value must be manually set to "open". If no value is set, the
      state defaults to null, which indicates an unfinished Order. An unfinished
      order is not displayed in user interfaces and can only be retrieved by its
      id. Non-null values such as "open" and "locked" are not checked or
      enforced by the server. Therefore, these values should not be used to make
      any logical decisions about the Order.
  manualTransaction:
    type: boolean
    description: >-
      Whether this order represents a manual transaction. A manual transaction
      is a transaction that has an arbitrary amount defined and is not
      associated with any inventory items. For example, the Clover Sale App and
      Clover Manual Transaction App create manual transactions. A manual
      transactions will have a single associated line item to hold the sale
      amount, but the generated receipt will display this differently to
      indicate that it is not considered a typical order with inventory items.
  groupLineItems:
    type: boolean
    description: >-
      Whether similar line items should be grouped together on the receipt that
      this order generates. Item "similarity" is based on items having matching
      values for a set of properties including price, modifiers, and discounts.
  testMode:
    type: boolean
    description: >-
      Whether this order was created in test mode. Payments made against test
      orders are not processed. Test mode orders can be deleted from the Orders
      App on the merchant's device or web dashboard
      (https://www.clover.com/orders/m/{mId}/orders). They will also be deleted
      when the device sends a POST to the
      /v2/merchant/{mId}/orders/delete_all_tests endpoint.
  payType:
    type: string
    description: >-
      Possible values: SPLIT_GUEST, SPLIT_ITEM, SPLIT_CUSTOM, FULL. During the
      payment flow, if the user chooses to split the payment for this order,
      this field will be set to one of the SPLIT_* values to indicate how the
      full amount should be split. If the user chooses to pay for the order in
      full with one payment, then this field will be FULL.
    enum:
      - SPLIT_GUEST
      - SPLIT_ITEM
      - SPLIT_CUSTOM
      - FULL
  createdTime:
    type: integer
    description: Creation timestamp
    format: int64
  clientCreatedTime:
    type: integer
    description: The time at which the client created this order
    format: int64
  modifiedTime:
    type: integer
    description: Last modified time of the order
    format: int64
  deletedTimestamp:
    type: integer
    format: int64
  serviceCharge:
    description: Optional service charge (gratuity) applied to this order
    $ref: ./ServiceCharge.yaml
  discounts:
    type: array
    description: >-
      Amount or percentage discounts applied to the order subtotal. To retrieve
      discounts applied to individual items, use the Get all line items for an
      order endpoint with the discounts field expanded
      (v3/merchants/{mId}/orders/{orderId}/line_items?expand=discounts).
    items:
      $ref: ./Discount.yaml
  lineItems:
    type: array
    description: Line items associated with this order
    items:
      $ref: ./LineItem.yaml
  payments:
    type: array
    description: >-
      Payments that were made for this order. If multiple payments were made,
      then the payType field should reflect the method used to split the total
      amount.
    items:
      $ref: ./Payment.yaml
  refunds:
    type: array
    description: Refunds that were made for this order
    items:
      $ref: ./Refund.yaml
  credits:
    type: array
    description: Credits associated with this order.
    items:
      $ref: ./Credit.yaml
  voids:
    type: array
    description: Voided payments associated with this order
    items:
      $ref: ./Payment.yaml
  preAuths:
    type: array
    description: Pre-authorizations associated with this order
    items:
      $ref: ./Payment.yaml
  device:
    description: >-
      Device which created the order, a 128-bit UUID, not a normal base-13
      Clover ID.
    $ref: ./Reference.yaml
  authorizations:
    type: array
    description: Card authorizations associated with this order
    items:
      $ref: ./Authorization.yaml
  merchant:
    $ref: ./Reference.yaml
  onlineOrder:
    $ref: ./OnlineOrder.yaml
  printGroups:
    type: array
    description: Print groups for line items of this order.
    items:
      $ref: ./PrintGroup.yaml
